{"remainingRequest":"D:\\idea_workspace\\healthy-manager-front\\node_modules\\babel-loader\\lib\\index.js!D:\\idea_workspace\\healthy-manager-front\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\idea_workspace\\healthy-manager-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\idea_workspace\\healthy-manager-front\\src\\views\\Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\idea_workspace\\healthy-manager-front\\src\\views\\Login.vue","mtime":1618324950292},{"path":"D:\\idea_workspace\\healthy-manager-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1616656130250},{"path":"D:\\idea_workspace\\healthy-manager-front\\node_modules\\babel-loader\\lib\\index.js","mtime":1616656090222},{"path":"D:\\idea_workspace\\healthy-manager-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1616656130250},{"path":"D:\\idea_workspace\\healthy-manager-front\\node_modules\\vue-loader\\lib\\index.js","mtime":1616656132299}],"contextDependencies":[],"result":["import _JSON$stringify from \"D:\\\\idea_workspace\\\\healthy-manager-front\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/json/stringify\";\nimport \"core-js/modules/es6.regexp.split\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Message from '../components/messages/index.js';\nimport { Loading } from 'element-ui';\nexport default {\n  data: function data() {\n    var _this = this;\n\n    var validateUsername = function validateUsername(rule, value, callback) {\n      value = value.split(\" \").join(\"\");\n\n      if (value === '') {\n        callback(new Error('请输入有效值'));\n      } else if (value.length < 3) {\n        callback(new Error('字段名太短'));\n      } else {\n        callback();\n      }\n    };\n\n    var validatePass = function validatePass(rule, value, callback) {\n      value = value.split(\" \").join(\"\");\n\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else {\n        callback();\n      }\n    };\n\n    var validatePass2 = function validatePass2(rule, value, callback) {\n      value = value.split(\" \").join(\"\");\n\n      if (value === '') {\n        callback(new Error('请再次输入密码'));\n      } else if (value !== _this.registerForm.password) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      loading: false,\n      loginForm: {\n        username: \"\",\n        password: \"\"\n      },\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }]\n      },\n      rules2: {\n        password: [{\n          validator: validatePass,\n          trigger: 'blur'\n        }],\n        checkPass: [{\n          validator: validatePass2,\n          trigger: 'blur' //失去焦点就开始校验\n\n        }],\n        username: [{\n          validator: validateUsername,\n          trigger: 'blur'\n        }],\n        StuNo: [{\n          validator: validateUsername,\n          trigger: 'blur'\n        }]\n      },\n      dialogVisible: false,\n      registerForm: {\n        username: \"\",\n        password: \"\",\n        checkPass: \"\",\n        stuNo: \"\"\n      },\n      menuMap: {},\n      loadingInstance: '',\n      loadingOptions: {\n        lock: true,\n        text: '正在登陆中，请耐心等候...',\n        spinner: 'el-icon-loading',\n        background: 'rgba(0,0,0,0.8)'\n      }\n    };\n  },\n  methods: {\n    login: function login(data) {\n      var self = this;\n\n      if (data.username === \"\" || data.password === \"\") {\n        self.$message.warning(\"用户名或密码不能为空！\");\n      } else {\n        self.loadingInstance = Loading.service(self.loadingOptions);\n        self.$http.post(\"/user/login\", self.loginForm).then(function (res) {\n          console.info(\"登录返回的结果为：\", res);\n\n          if (res.status === 200) {\n            var user = res.data; //缓存所有角色信息\n\n            self.$http.get(\"/role/all\").then(function (res) {\n              if (res.status === 200) {\n                localStorage.setItem(\"roles\", _JSON$stringify(res.data));\n              }\n            }); //缓存所有用户信息\n\n            self.$http.get(\"/user/all\").then(function (res) {\n              if (res.status === 200) {\n                localStorage.setItem(\"users\", _JSON$stringify(res.data));\n              }\n            }); //缓存当前角色信息\n\n            self.$http.get(\"/role/get/\" + user.roleId).then(function (res) {\n              if (res.status === 200) {\n                localStorage.setItem(\"role\", _JSON$stringify(res.data));\n              }\n            }); //缓存当前用户的健康档案\n\n            self.$http.get(\"/checkInfo/getCurrentCheckInfo/\" + user.id).then(function (res) {\n              if (res.status === 200) {\n                localStorage.setItem(\"checkData\", _JSON$stringify(res.data));\n              }\n            }); //缓存当前用户信息\n\n            localStorage.setItem(\"user\", _JSON$stringify(user));\n            self.$http.get(\"/resources/getMenuByUserId\", {\n              params: {\n                \"userId\": user.id,\n                \"typeId\": 0\n              }\n            }).then(function (res) {\n              if (res.status === 200) {\n                localStorage.setItem(\"menu\", _JSON$stringify(res.data));\n                self.loadingInstance.close();\n                self.$router.push(\"/index\");\n              }\n            });\n          }\n        }).catch(function () {\n          Message.error(\"访问出错\");\n          self.loadingInstance.close();\n        });\n        self.loadingInstance.close();\n      }\n    },\n    openRegister: function openRegister() {\n      this.dialogVisible = true;\n    },\n    register: function register(registerForm) {\n      var _this2 = this;\n\n      this.$refs[registerForm].validate(function (valid) {\n        if (valid) {\n          _this2.$http.post(\"/user/add\", registerForm).then(function (res) {\n            if (res.status === 200) {\n              Message.success(\"注册成功\");\n              _this2.dialogVisible = false;\n            }\n          });\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    handleClose: function handleClose() {\n      this.dialogVisible = false;\n    },\n    resetForm: function resetForm(registerForm) {\n      this.$refs[registerForm].resetFields();\n    }\n  }\n};",{"version":3,"sources":["Login.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"login\" v-loading=\"loading\">\r\n    <el-card style=\"background-color: rgba(255, 255, 255, 0.8);\">\r\n      <img src=\"@/assets/gdufe.jpg\" alt=\"广东财经大学\" style=\"width: 100px;height: 100px\">\r\n      <el-form :model=\"loginForm\" :rules=\"rules\" ref=\"loginForm\">\r\n        <h1 style=\"margin: 4px 0\">学生健康管理系统</h1>\r\n        <span style=\"font-size:20px;letter-spacing: 20px;text-shadow: -4px -4px 5px #aaa;font-variant: all-small-caps;word-spacing: 3px;\">欢迎登陆</span>\r\n        <el-form-item style=\"margin-top: 43px\" prop=\"username\">\r\n          <el-input size=\"small\" placeholder=\"用户名\" v-model=\"loginForm.username\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"password\">\r\n          <el-input size=\"small\" placeholder=\"密码\" type=\"password\" v-model=\"loginForm.password\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"success\" size=\"small\" style=\"margin-top: 10px\" @click=\"login(loginForm)\">登&nbsp;&nbsp;&nbsp;&nbsp;录</el-button>\r\n          <el-button type=\"info\" size=\"small\" style=\"margin-top: 10px\" @click=\"openRegister\">\r\n            注&nbsp;&nbsp;&nbsp;&nbsp;册\r\n          </el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-card>\r\n    <el-dialog\r\n            title=\"注册\"\r\n            :visible.sync=\"dialogVisible\"\r\n            width=\"30%\"\r\n            :before-close=\"handleClose\">\r\n      <el-form :model=\"registerForm\" status-icon :rules=\"rules2\" :ref=\"registerForm\" label-width=\"100px\">\r\n        <el-form-item label=\"用户名\" prop=\"username\">\r\n          <el-input type=\"text\" v-model=\"registerForm.username\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"学号\" prop=\"stuNo\">\r\n          <el-input v-model=\"registerForm.stuNo\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"密码\" prop=\"password\">\r\n          <el-input type=\"password\" v-model=\"registerForm.password\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"确认密码\" prop=\"checkPass\">\r\n          <el-input type=\"password\" v-model=\"registerForm.checkPass\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n         <el-button @click=\"resetForm(registerForm)\">重置</el-button>\r\n         <el-button type=\"success\" @click=\"register(registerForm)\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n<script>\r\n  import Message from '../components/messages/index.js'\r\n  import {Loading} from 'element-ui'\r\n\r\n  export default {\r\n    data() {\r\n      const validateUsername = (rule, value, callback) => {\r\n        value = value.split(\" \").join(\"\");\r\n        if (value === '') {\r\n          callback(new Error('请输入有效值'));\r\n        } else if (value.length < 3) {\r\n          callback(new Error('字段名太短'));\r\n        } else {\r\n          callback();\r\n        }\r\n      };\r\n      const validatePass = (rule, value, callback) => {\r\n        value = value.split(\" \").join(\"\");\r\n        if (value === '') {\r\n          callback(new Error('请输入密码'));\r\n        } else {\r\n          callback();\r\n        }\r\n      };\r\n      const validatePass2 = (rule, value, callback) => {\r\n        value = value.split(\" \").join(\"\");\r\n        if (value === '') {\r\n          callback(new Error('请再次输入密码'));\r\n        } else if (value !== this.registerForm.password) {\r\n          callback(new Error('两次输入密码不一致!'));\r\n        } else {\r\n          callback();\r\n        }\r\n      };\r\n      return {\r\n        loading: false,\r\n        loginForm: {\r\n          username: \"\",\r\n          password: \"\"\r\n        },\r\n        rules: {\r\n          username: [\r\n            {required: true, message: '请输入用户名', trigger: 'blur'}\r\n          ],\r\n          password: [\r\n            {required: true, message: '请输入密码', trigger: 'blur'}\r\n          ]\r\n        },\r\n        rules2: {\r\n          password: [\r\n            {validator: validatePass, trigger: 'blur'}\r\n          ],\r\n          checkPass: [\r\n            {validator: validatePass2, trigger: 'blur'} //失去焦点就开始校验\r\n          ],\r\n          username: [\r\n            {validator: validateUsername, trigger: 'blur'}\r\n          ],\r\n          StuNo: [\r\n            {validator: validateUsername, trigger: 'blur'}\r\n          ]\r\n        },\r\n        dialogVisible: false,\r\n        registerForm: {\r\n          username: \"\",\r\n          password: \"\",\r\n          checkPass: \"\",\r\n          stuNo: \"\"\r\n        },\r\n        menuMap: {},\r\n        loadingInstance: '',\r\n        loadingOptions: {\r\n          lock: true,\r\n          text: '正在登陆中，请耐心等候...',\r\n          spinner: 'el-icon-loading',\r\n          background: 'rgba(0,0,0,0.8)'\r\n        },\r\n      }\r\n    },\r\n    methods: {\r\n      login(data) {\r\n        let self = this;\r\n        if (data.username === \"\" || data.password === \"\") {\r\n          self.$message.warning(\"用户名或密码不能为空！\")\r\n        } else {\r\n          self.loadingInstance = Loading.service(self.loadingOptions);\r\n          self.$http.post(\"/user/login\", self.loginForm).then(res => {\r\n            console.info(\"登录返回的结果为：\", res);\r\n            if (res.status === 200) {\r\n              let user = res.data;\r\n              //缓存所有角色信息\r\n              self.$http.get(\"/role/all\").then(res => {\r\n                if (res.status === 200) {\r\n                  localStorage.setItem(\"roles\", JSON.stringify(res.data));\r\n                }\r\n              });\r\n              //缓存所有用户信息\r\n              self.$http.get(\"/user/all\").then(res => {\r\n                if (res.status === 200) {\r\n                  localStorage.setItem(\"users\", JSON.stringify(res.data));\r\n                }\r\n              });\r\n              //缓存当前角色信息\r\n              self.$http.get(\"/role/get/\" + user.roleId).then(res => {\r\n                if (res.status === 200) {\r\n                  localStorage.setItem(\"role\", JSON.stringify(res.data));\r\n                }\r\n              });\r\n              //缓存当前用户的健康档案\r\n              self.$http.get(\"/checkInfo/getCurrentCheckInfo/\" + user.id).then(res => {\r\n                if (res.status === 200) {\r\n                  localStorage.setItem(\"checkData\", JSON.stringify(res.data));\r\n                }\r\n              });\r\n              //缓存当前用户信息\r\n              localStorage.setItem(\"user\", JSON.stringify(user));\r\n              self.$http.get(\"/resources/getMenuByUserId\", {params: {\"userId\": user.id, \"typeId\": 0}}).then(res => {\r\n                if (res.status === 200) {\r\n                  localStorage.setItem(\"menu\", JSON.stringify(res.data));\r\n                  self.loadingInstance.close();\r\n                  self.$router.push(\"/index\");\r\n                }\r\n              })\r\n            }\r\n          }).catch(() => {\r\n            Message.error(\"访问出错\");\r\n            self.loadingInstance.close();\r\n          });\r\n          self.loadingInstance.close();\r\n\r\n        }\r\n      },\r\n      openRegister() {\r\n        this.dialogVisible = true;\r\n      },\r\n      register(registerForm) {\r\n        this.$refs[registerForm].validate((valid) => {\r\n          if (valid) {\r\n            this.$http.post(\"/user/add\", registerForm).then(res => {\r\n              if (res.status === 200) {\r\n                Message.success(\"注册成功\");\r\n                this.dialogVisible = false;\r\n              }\r\n            })\r\n          } else {\r\n            console.log('error submit!!');\r\n            return false;\r\n          }\r\n        });\r\n      },\r\n      handleClose() {\r\n        this.dialogVisible = false;\r\n      },\r\n      resetForm(registerForm) {\r\n        this.$refs[registerForm].resetFields();\r\n      },\r\n\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"less\">\r\n  .login {\r\n    display: flex;\r\n    justify-content: center;\r\n    text-align: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: calc(~'100vh');\r\n    background: url(\"../assets/gdufeSchool.jpg\");\r\n    background-size: cover;\r\n\r\n    .el-card {\r\n      height: 469px;\r\n      width: 508px;\r\n\r\n      h3 {\r\n        padding-top: 40px;\r\n        padding-bottom: 10px;\r\n        letter-spacing: 10px;\r\n        text-shadow: 0 12px 7px #c8e494;\r\n      }\r\n\r\n      .el-form-item {\r\n        padding: 0 78px;\r\n\r\n        .el-input__inner {\r\n          text-align: center !important;\r\n        }\r\n      }\r\n    }\r\n  }\r\n</style>\r\n\r\n"],"sourceRoot":"src/views"}]}