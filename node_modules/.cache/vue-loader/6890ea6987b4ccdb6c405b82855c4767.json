{"remainingRequest":"D:\\idea_workspace\\healthy-manager-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\idea_workspace\\healthy-manager-front\\src\\views\\Login.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"D:\\idea_workspace\\healthy-manager-front\\src\\views\\Login.vue","mtime":1618324950292},{"path":"D:\\idea_workspace\\healthy-manager-front\\node_modules\\css-loader\\index.js","mtime":1616656130671},{"path":"D:\\idea_workspace\\healthy-manager-front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1616656132299},{"path":"D:\\idea_workspace\\healthy-manager-front\\node_modules\\postcss-loader\\src\\index.js","mtime":1616656131771},{"path":"D:\\idea_workspace\\healthy-manager-front\\node_modules\\less-loader\\dist\\cjs.js","mtime":1616656152713},{"path":"D:\\idea_workspace\\healthy-manager-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1616656130250},{"path":"D:\\idea_workspace\\healthy-manager-front\\node_modules\\vue-loader\\lib\\index.js","mtime":1616656132299}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.login {\n  display: flex;\n  justify-content: center;\n  text-align: center;\n  align-items: center;\n  width: 100%;\n  height: calc(~'100vh');\n  background: url(\"../assets/gdufeSchool.jpg\");\n  background-size: cover;\n\n  .el-card {\n    height: 469px;\n    width: 508px;\n\n    h3 {\n      padding-top: 40px;\n      padding-bottom: 10px;\n      letter-spacing: 10px;\n      text-shadow: 0 12px 7px #c8e494;\n    }\n\n    .el-form-item {\n      padding: 0 78px;\n\n      .el-input__inner {\n        text-align: center !important;\n      }\n    }\n  }\n}\n",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"login\" v-loading=\"loading\">\r\n    <el-card style=\"background-color: rgba(255, 255, 255, 0.8);\">\r\n      <img src=\"@/assets/gdufe.jpg\" alt=\"广东财经大学\" style=\"width: 100px;height: 100px\">\r\n      <el-form :model=\"loginForm\" :rules=\"rules\" ref=\"loginForm\">\r\n        <h1 style=\"margin: 4px 0\">学生健康管理系统</h1>\r\n        <span style=\"font-size:20px;letter-spacing: 20px;text-shadow: -4px -4px 5px #aaa;font-variant: all-small-caps;word-spacing: 3px;\">欢迎登陆</span>\r\n        <el-form-item style=\"margin-top: 43px\" prop=\"username\">\r\n          <el-input size=\"small\" placeholder=\"用户名\" v-model=\"loginForm.username\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"password\">\r\n          <el-input size=\"small\" placeholder=\"密码\" type=\"password\" v-model=\"loginForm.password\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"success\" size=\"small\" style=\"margin-top: 10px\" @click=\"login(loginForm)\">登&nbsp;&nbsp;&nbsp;&nbsp;录</el-button>\r\n          <el-button type=\"info\" size=\"small\" style=\"margin-top: 10px\" @click=\"openRegister\">\r\n            注&nbsp;&nbsp;&nbsp;&nbsp;册\r\n          </el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-card>\r\n    <el-dialog\r\n            title=\"注册\"\r\n            :visible.sync=\"dialogVisible\"\r\n            width=\"30%\"\r\n            :before-close=\"handleClose\">\r\n      <el-form :model=\"registerForm\" status-icon :rules=\"rules2\" :ref=\"registerForm\" label-width=\"100px\">\r\n        <el-form-item label=\"用户名\" prop=\"username\">\r\n          <el-input type=\"text\" v-model=\"registerForm.username\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"学号\" prop=\"stuNo\">\r\n          <el-input v-model=\"registerForm.stuNo\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"密码\" prop=\"password\">\r\n          <el-input type=\"password\" v-model=\"registerForm.password\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"确认密码\" prop=\"checkPass\">\r\n          <el-input type=\"password\" v-model=\"registerForm.checkPass\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n         <el-button @click=\"resetForm(registerForm)\">重置</el-button>\r\n         <el-button type=\"success\" @click=\"register(registerForm)\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n<script>\r\n  import Message from '../components/messages/index.js'\r\n  import {Loading} from 'element-ui'\r\n\r\n  export default {\r\n    data() {\r\n      const validateUsername = (rule, value, callback) => {\r\n        value = value.split(\" \").join(\"\");\r\n        if (value === '') {\r\n          callback(new Error('请输入有效值'));\r\n        } else if (value.length < 3) {\r\n          callback(new Error('字段名太短'));\r\n        } else {\r\n          callback();\r\n        }\r\n      };\r\n      const validatePass = (rule, value, callback) => {\r\n        value = value.split(\" \").join(\"\");\r\n        if (value === '') {\r\n          callback(new Error('请输入密码'));\r\n        } else {\r\n          callback();\r\n        }\r\n      };\r\n      const validatePass2 = (rule, value, callback) => {\r\n        value = value.split(\" \").join(\"\");\r\n        if (value === '') {\r\n          callback(new Error('请再次输入密码'));\r\n        } else if (value !== this.registerForm.password) {\r\n          callback(new Error('两次输入密码不一致!'));\r\n        } else {\r\n          callback();\r\n        }\r\n      };\r\n      return {\r\n        loading: false,\r\n        loginForm: {\r\n          username: \"\",\r\n          password: \"\"\r\n        },\r\n        rules: {\r\n          username: [\r\n            {required: true, message: '请输入用户名', trigger: 'blur'}\r\n          ],\r\n          password: [\r\n            {required: true, message: '请输入密码', trigger: 'blur'}\r\n          ]\r\n        },\r\n        rules2: {\r\n          password: [\r\n            {validator: validatePass, trigger: 'blur'}\r\n          ],\r\n          checkPass: [\r\n            {validator: validatePass2, trigger: 'blur'} //失去焦点就开始校验\r\n          ],\r\n          username: [\r\n            {validator: validateUsername, trigger: 'blur'}\r\n          ],\r\n          StuNo: [\r\n            {validator: validateUsername, trigger: 'blur'}\r\n          ]\r\n        },\r\n        dialogVisible: false,\r\n        registerForm: {\r\n          username: \"\",\r\n          password: \"\",\r\n          checkPass: \"\",\r\n          stuNo: \"\"\r\n        },\r\n        menuMap: {},\r\n        loadingInstance: '',\r\n        loadingOptions: {\r\n          lock: true,\r\n          text: '正在登陆中，请耐心等候...',\r\n          spinner: 'el-icon-loading',\r\n          background: 'rgba(0,0,0,0.8)'\r\n        },\r\n      }\r\n    },\r\n    methods: {\r\n      login(data) {\r\n        let self = this;\r\n        if (data.username === \"\" || data.password === \"\") {\r\n          self.$message.warning(\"用户名或密码不能为空！\")\r\n        } else {\r\n          self.loadingInstance = Loading.service(self.loadingOptions);\r\n          self.$http.post(\"/user/login\", self.loginForm).then(res => {\r\n            console.info(\"登录返回的结果为：\", res);\r\n            if (res.status === 200) {\r\n              let user = res.data;\r\n              //缓存所有角色信息\r\n              self.$http.get(\"/role/all\").then(res => {\r\n                if (res.status === 200) {\r\n                  localStorage.setItem(\"roles\", JSON.stringify(res.data));\r\n                }\r\n              });\r\n              //缓存所有用户信息\r\n              self.$http.get(\"/user/all\").then(res => {\r\n                if (res.status === 200) {\r\n                  localStorage.setItem(\"users\", JSON.stringify(res.data));\r\n                }\r\n              });\r\n              //缓存当前角色信息\r\n              self.$http.get(\"/role/get/\" + user.roleId).then(res => {\r\n                if (res.status === 200) {\r\n                  localStorage.setItem(\"role\", JSON.stringify(res.data));\r\n                }\r\n              });\r\n              //缓存当前用户的健康档案\r\n              self.$http.get(\"/checkInfo/getCurrentCheckInfo/\" + user.id).then(res => {\r\n                if (res.status === 200) {\r\n                  localStorage.setItem(\"checkData\", JSON.stringify(res.data));\r\n                }\r\n              });\r\n              //缓存当前用户信息\r\n              localStorage.setItem(\"user\", JSON.stringify(user));\r\n              self.$http.get(\"/resources/getMenuByUserId\", {params: {\"userId\": user.id, \"typeId\": 0}}).then(res => {\r\n                if (res.status === 200) {\r\n                  localStorage.setItem(\"menu\", JSON.stringify(res.data));\r\n                  self.loadingInstance.close();\r\n                  self.$router.push(\"/index\");\r\n                }\r\n              })\r\n            }\r\n          }).catch(() => {\r\n            Message.error(\"访问出错\");\r\n            self.loadingInstance.close();\r\n          });\r\n          self.loadingInstance.close();\r\n\r\n        }\r\n      },\r\n      openRegister() {\r\n        this.dialogVisible = true;\r\n      },\r\n      register(registerForm) {\r\n        this.$refs[registerForm].validate((valid) => {\r\n          if (valid) {\r\n            this.$http.post(\"/user/add\", registerForm).then(res => {\r\n              if (res.status === 200) {\r\n                Message.success(\"注册成功\");\r\n                this.dialogVisible = false;\r\n              }\r\n            })\r\n          } else {\r\n            console.log('error submit!!');\r\n            return false;\r\n          }\r\n        });\r\n      },\r\n      handleClose() {\r\n        this.dialogVisible = false;\r\n      },\r\n      resetForm(registerForm) {\r\n        this.$refs[registerForm].resetFields();\r\n      },\r\n\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"less\">\r\n  .login {\r\n    display: flex;\r\n    justify-content: center;\r\n    text-align: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: calc(~'100vh');\r\n    background: url(\"../assets/gdufeSchool.jpg\");\r\n    background-size: cover;\r\n\r\n    .el-card {\r\n      height: 469px;\r\n      width: 508px;\r\n\r\n      h3 {\r\n        padding-top: 40px;\r\n        padding-bottom: 10px;\r\n        letter-spacing: 10px;\r\n        text-shadow: 0 12px 7px #c8e494;\r\n      }\r\n\r\n      .el-form-item {\r\n        padding: 0 78px;\r\n\r\n        .el-input__inner {\r\n          text-align: center !important;\r\n        }\r\n      }\r\n    }\r\n  }\r\n</style>\r\n\r\n"]}]}