{"remainingRequest":"D:\\idea_workspace\\healthy-manager-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\idea_workspace\\healthy-manager-front\\src\\components\\upload\\UploadBase64.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\idea_workspace\\healthy-manager-front\\src\\components\\upload\\UploadBase64.vue","mtime":1617034347089},{"path":"D:\\idea_workspace\\healthy-manager-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1616656130250},{"path":"D:\\idea_workspace\\healthy-manager-front\\node_modules\\babel-loader\\lib\\index.js","mtime":1616656090222},{"path":"D:\\idea_workspace\\healthy-manager-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1616656130250},{"path":"D:\\idea_workspace\\healthy-manager-front\\node_modules\\vue-loader\\lib\\index.js","mtime":1616656132299}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  props: {\n    value: {\n      type: String,\n      defaults: \"\"\n    }\n  },\n  name: \"UploadImg\",\n  data() {\n    return {\n      url: \"/api/uploadFile/upload\"\n    }\n  },\n  methods: {\n    handleAvatarSuccess(res) {\n      console.log(\"res:\", res);\n      this.emitInput(res);\n    },\n    beforeAvatarUpload(file) {\n      const isJPG = file.type === 'image/jpeg';\n      const isPNG = file.type === 'image/png';\n      const isLt2M = file.size / 1024 / 1024 < 2;\n      if (!isLt2M) {\n        this.$message.error('上传头像图片大小不能超过 2MB!');\n      }\n      if (!isJPG && !isPNG) {\n        this.$message.error('上传头像图片只能是 JPG或者PNG 格式!');\n      }\n      return isLt2M && (isJPG || isPNG);\n    },\n    emitInput(val) {\n      this.$emit('input', val);\n\n    }\n  }\n}\n",{"version":3,"sources":["UploadBase64.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"UploadBase64.vue","sourceRoot":"src/components/upload","sourcesContent":["<template>\r\n  <div>\r\n    <el-upload\r\n            class=\"avatar-uploader\"\r\n            :action=\"url\"\r\n            :multiple=\"false\"\r\n            :show-file-list=\"false\"\r\n            :on-success=\"handleAvatarSuccess\"\r\n            :before-upload=\"beforeAvatarUpload\">\r\n      <img alt=\"头像图片\" v-if=\"value\" :src=\"value\" class=\"avatar\">\r\n      <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n    </el-upload>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    props: {\r\n      value: {\r\n        type: String,\r\n        defaults: \"\"\r\n      }\r\n    },\r\n    name: \"UploadImg\",\r\n    data() {\r\n      return {\r\n        url: \"/api/uploadFile/upload\"\r\n      }\r\n    },\r\n    methods: {\r\n      handleAvatarSuccess(res) {\r\n        console.log(\"res:\", res);\r\n        this.emitInput(res);\r\n      },\r\n      beforeAvatarUpload(file) {\r\n        const isJPG = file.type === 'image/jpeg';\r\n        const isPNG = file.type === 'image/png';\r\n        const isLt2M = file.size / 1024 / 1024 < 2;\r\n        if (!isLt2M) {\r\n          this.$message.error('上传头像图片大小不能超过 2MB!');\r\n        }\r\n        if (!isJPG && !isPNG) {\r\n          this.$message.error('上传头像图片只能是 JPG或者PNG 格式!');\r\n        }\r\n        return isLt2M && (isJPG || isPNG);\r\n      },\r\n      emitInput(val) {\r\n        this.$emit('input', val);\r\n\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n  .avatar-uploader .el-upload {\r\n    border: 1px dashed #d9d9d9;\r\n    border-radius: 6px;\r\n    cursor: pointer;\r\n    position: relative;\r\n    overflow: hidden;\r\n  }\r\n\r\n  .avatar-uploader .el-upload:hover {\r\n    border-color: #409EFF;\r\n  }\r\n\r\n  .avatar-uploader-icon {\r\n    font-size: 28px;\r\n    color: #8c939d;\r\n    width: 178px;\r\n    height: 241px;\r\n    line-height: 241px;\r\n    text-align: center;\r\n    border: 1px solid #8c939d;\r\n  }\r\n\r\n  .avatar {\r\n    width: 178px;\r\n    height: 241px;;\r\n    display: block;\r\n  }\r\n</style>\r\n"]}]}